---
import { app } from "../firebase/server"
import {getAuth} from 'firebase-admin/auth'
import Layout from "../layouts/Layout.astro"

const auth = getAuth(app)

if (Astro.cookies.has('__session')){
    const sessionCookie = Astro.cookies.get('__session')?.value
    const decodedCookie = await auth.verifySessionCookie(sessionCookie || "")
    if (decodedCookie){
        return Astro.redirect('/dashboard')
    }
}
---

<Layout>
    <a href="/">home</a>
    <h1>sign in</h1>

    <form action="">
        <div>
            <label for="email">correo</label>
            <input type="text" name="email" id="email" />
        </div>
        <div>
            <label for="password">password</label>
            <input type="text" name="password" id="password" />
        </div>
        <div>
            <button type="submit"> sign in </button>
        </div>
    </form>
    <div>
        <button type="button" id="googleBtn">
            sign in with popup (google)
        </button>
    </div>

    <script>
        import { getAuth, inMemoryPersistence, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth'
        import { app } from '../firebase/client'

        const auth = getAuth(app)

        auth.setPersistence(inMemoryPersistence)

        const form = document.querySelector("form")
        form.addEventListener('submit', async (e) => {
            e.preventDefault()
            const formData = new FormData(form)
            const email = formData.get('email')?.toString()
            const password = formData.get('password')?.toString()

            if(!email || !password) {
                return;
            }
            const passwordCredential= await signInWithEmailAndPassword(auth, email, password)
            const idToken = await passwordCredential.user.getIdToken()
            const response = await fetch ("api/auth/signin", {
                method: "POST",
                headers: {
                    Authorization: `Bearer ${idToken}`
                }
            })

            if (response.redirected) {
                window.location.assign(response.url)
            }
        })

        const googleBtn = document.getElementById('googleBtn')
        googleBtn.addEventListener('click', async () => {
            const provider = new GoogleAuthProvider()

            try {
                const googleCredential = await signInWithPopup(auth, provider)
                const idToken = await googleCredential.user.getIdToken()

                const response = await fetch("api/auth/signin", {
                    method: "POST",
                    headers: {
                        Authorization: `Bearer ${idToken}`
                    }
                })

                if (response.redirected) {
                    window.location.assign(response.url)
                }
            } catch (error) {
                console.error("Error during Google sign-in:", error)
            }
        })

    </script>
</Layout>
